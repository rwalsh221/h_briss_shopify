{{ 'briss-collection.css' | asset_url | stylesheet_tag }}

{% comment %} TODO: CHECK ERROR IN QURYSELCTOR FOR CART DRAWER WHEN EMPTY {% endcomment %}

<nav class="collection-nav">
    <div id="collection-nav__btn-container__back" class="collection-nav__btn-container collection-nav__btn-container--back">
        <button id="cn-btn__back" class="collection-nav__btn">{{ section.settings.cn-btn-back-label }}</button>
    </div>
    <ul id="cn__link-container" class="collection-nav__link-container">
        {% for collection in collections %}
            <li>{{- collection.title | link_to: collection.url }}</li>
        {% endfor %}
    </ul>
    <div id="collection-nav__btn-container__fwd" class="collection-nav__btn-container collection-nav__btn-container--fwd">
        <button id="cn-btn__fwd" class="collection-nav__btn">FWD</button>
    </div>
</nav>
    {% if section.settings.paginate-collection %}
        {% paginate collection.products by section.settings.paginate-collection-amount %}
            <div class="collection-grid">
                {% for product in collection.products %}
                    <div class="product-card">
                    <div class="product-card__header">
                            <div>
                                <h4>{{ product.title | link_to: product.url }}</h4>
                                <p>From&nbsp;{{ product.price | money }}</p>
                            </div> 
                            <div class="product-card__icon">
                                {{ images['product-icon-special.svg'] | image_url: width: 800, height: 800 | image_tag }}
                            </div>
                        </div>
                        <div class="product-card__img">
                            {{ product.featured_image | image_url: width: 200, height: 200 | image_tag }}
                        </div>
                        <div class="product-card__description">
                            {{ product.description }}
                        </div>
                        <div class="product-card__additional">
                            <a href="{{ product.url }}">More Information!!!</a>
                            
                        </div>
                    </div>
                {% endfor %}
            </div>
            <nav class="paginate_nav">
                <ul>
                    <li>
                        {% if paginate.previous %}
                            <a href="{{ paginate.previous.url }}">{{ paginate.previous.title }}</a>
                        {% endif %}
                    </li>
                    <li>
                        {% if paginate.next %}
                            <a href="{{ paginate.next.url }}">{{ paginate.next.title }}</a>
                        {% endif %}
                    </li>
                </ul>
            </nav>
        {% endpaginate %}
    {% else %}
        <div class="collection-grid">
            {% for product in collection.products %}
                <div class="product-card">
                <div class="product-card__header">
                        <div>
                            <h4>{{ product.title | link_to: product.url }}</h4>
                            <p>From&nbsp;{{ product.price | money }}</p>
                        </div> 
                        <div class="product-card__icon">
                            {{ images['product-icon-special.svg'] | image_url: width: 800, height: 800 | image_tag }}
                        </div>
                    </div>
                    <div class="product-card__img">
                        {{ product.featured_image | image_url: width: 200, height: 200 | image_tag }}
                    </div>
                    <div class="product-card__description">
                        {{ product.description }}
                    </div>
                    <div class="product-card__additional">
                        <a href="{{ product.url }}">More Information!!!</a>
                        
                    </div>
                </div>
            {% endfor %}
        </div>
    {% endif %}


{% javascript %}

    const setDomstrings = () => {
        return {
            cnLinkContainer: document.getElementById('cn__link-container'),
            cnBtnContainerBack: document.getElementById('collection-nav__btn-container__back'),
            cnBtnContainerFwd: document.getElementById('collection-nav__btn-container__fwd'),
            cnBtnBack: document.getElementById('cn-btn__back'),
            cnBtnFwd: document.getElementById('cn-btn__fwd'),
            cssShadowLeft:'collection-nav__btn-shadow--l',
            cssShadowRight:'collection-nav__btn-shadow--r',
        }
    }
    
    let domStrings = setDomstrings()

    document.addEventListener('shopify:section:load',()=>{
        console.log('************************** UPDATED ***************************************')
        domStrings = setDomstrings()
        if(domStrings.cnLinkContainer.offsetWidth < domStrings.cnLinkContainer.scrollWidth) {
        console.log(domStrings)
        domStrings.cnBtnContainerFwd.classList.add(domStrings.cssShadowLeft)
        domStrings.cnBtnBack.style.display = 'flex'
        domStrings.cnBtnFwd.style.display = 'flex'
    }
    domStrings.cnBtnFwd.addEventListener('click', scrollCollectionNavFwd)
    domStrings.cnBtnBack.addEventListener('click', scrollCollectionNavBack)
    })

    

    if(domStrings.cnLinkContainer.offsetWidth < domStrings.cnLinkContainer.scrollWidth) {
        console.log(domStrings)
        domStrings.cnBtnContainerFwd.classList.add(domStrings.cssShadowLeft)
        domStrings.cnBtnBack.style.display = 'flex'
        domStrings.cnBtnFwd.style.display = 'flex'

    }

    const scrollCollectionNavBack = () => {
        // GET MAX SCROLL
        const collectionNavMaxScroll = domStrings.cnLinkContainer.scrollWidth - domStrings.cnLinkContainer.offsetWidth
        
        domStrings.cnLinkContainer.scrollLeft -= 20;
        const currScrollPos = domStrings.cnLinkContainer.scrollLeft

        if(currScrollPos === 0) {
            domStrings.cnBtnContainerBack.classList.remove(domStrings.cssShadowRight)
            return
        }
       
        if(currScrollPos === collectionNavMaxScroll - 20){
            domStrings.cnBtnContainerFwd.classList.add(domStrings.cssShadowLeft)
        }
    }

    const scrollCollectionNavFwd = () => {
        // GET MAX SCROLL
        const collectionNavMaxScroll = domStrings.cnLinkContainer.scrollWidth - domStrings.cnLinkContainer.offsetWidth
        domStrings.cnLinkContainer.scrollLeft += 20;
        const currScrollPos = domStrings.cnLinkContainer.scrollLeft

        if(currScrollPos === 20){
            domStrings.cnBtnContainerBack.classList.add(domStrings.cssShadowRight)
            return
        }
        
        if(currScrollPos === collectionNavMaxScroll) {
            domStrings.cnBtnContainerFwd.classList.remove(domStrings.cssShadowLeft)
        }
    }

    domStrings.cnBtnFwd.addEventListener('click', scrollCollectionNavFwd)
    domStrings.cnBtnBack.addEventListener('click', scrollCollectionNavBack)

{% endjavascript %}

{% schema %}
    {
        "name": "collection",
        "tag": "section",
        "limit": 1,
        "settings": [
            {
                "type": "text",
                "id": "cn-btn-back-label",
                "label": "Collection Nav Button Back Label",
                "default": "BACK"
            },
            {
                "type": "image_picker",
                "id": "cn-btn-back-image",
                "label": "Collection Nav Button Back Image",
            },
            {
                "type": "text",
                "id": "cn-btn-fwd-label",
                "label": "Collection Nav Button Forward Label",
                "default": "FWD"
            },
            {
                "type": "image_picker",
                "id": "cn-btn-fwd-image",
                "label": "Collection Nav Button Forward Image",
            },
            {
                "type": "checkbox",
                "id": "paginate-collection",
                "label": "Paginate Products?",
                "default": true
            },
            {
                "type": "number",
                "id": "paginate-collection-amount",
                "label": "Number Of Products Per Page",
                "default": 3
            }
        ]

    }
{% endschema %}