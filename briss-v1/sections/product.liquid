{{ 'briss-product.css' | asset_url | stylesheet_tag }}
{% comment %} 

<div class="product">
    <div class="product-card">
        <h3 class="heading__tertiary">{{ product.title }}<h3>
        <p>{{ product.description }}</p>
        <p class="product-card__price">from {{ product.price | money }}</p>
        {% form 'product', product %}
            {% comment %} <input type="radio" value="{{ product.variants | last }}"> {% endcomment %}
            <select name="id" id="select">
              {% for variant in product.variants %}
                <option valuesssss="{{ variant.id }}" data-price="{{ variant.price }}"
                  {% if variant == product.selected_or_first_available_variant %}selected="selected"{% endif %}
                >
                  {{ variant.title }} - {{ variant.price | money }} - {{ variant.id }}  {{ variant.options }}
                </option>
              {% endfor %}
            </select>
            <br>
           

            <label>
              Strength
              <select>
                {%- for value in product.options_by_name['size'].values %}
                <option>{{ value }}</option>
                {%- endfor %}
              </select>
            </label>

            {% for option in product.options %}
              <label>{{ option }}</label>
              <select>
                {% for value in product.options_by_name[option].values %}
                  <option>{{ value }}</option>
                {% endfor %}
              </select>
            {% endfor %}

            <input type="text" name="quantity" min="1" value="1" id="quantity">
            <p>Total Price: <span id="total_price">{{ product.selected_or_first_available_variant.price | money }}</span></p>

            <input class="product-card__add-to-cart" type="submit" value="Add to cart">
            {{ form | payment_button }}

          {% endform %}
    </div>
   
    <div class="product-img">
        {{ product.featured_image | image_url: width: 800, height: 800 | image_tag }}
    </div>
</div>


{% javascript %}
  // ELEMENTS
  const select = document.getElementById('select');
  const totalPriceEl = document.getElementById('total_price');
  const quantity = document.getElementById('quantity');

  const updateTotalPrice=()=>{
    const totalPrice = select.options[select.selectedIndex].dataset.price * quantity.value

    totalPriceEl.textContent = totalPrice
  }
  
  select.addEventListener('change', updateTotalPrice)

{% endjavascript %}
 {% endcomment %}

 {% comment %}
  Renders product variant-picker

  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} Id of the product form to which the variant picker is associated.
  - update_url: {Boolean} whether or not to update url when changing variants. If false, the url isn't updated. Default: true (optional).
  Usage:
  {% render 'product-variant-picker', product: product, block: block, product_form_id: product_form_id %}
{% endcomment %}

<div class="product">
  
  <div class="product-img">
    {{ product.featured_image | image_url: width: 800, height: 800 | image_tag  }}
  </div>
  
  <div class="product-card">
    <h3 class="heading__tertiary">{{ product.title }}</h3>

      {% comment %} hide compare at price if non or same. try do it. video 20:30 {% endcomment %}
    <p class="product-car__price--compare ">{{ product.selected_or_first_available_variant.price | money }}</p>
    <p class="product-card__price">from {{ product.selected_or_first_available_variant.price | money }}</p>

    {% form 'product', product %}
      <input id="product-id" type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">

      {% if product.variants.size > 1 %}
        <div class="product-option">
          {% for option in product.options_with_values %}
            <fieldset id="{{ product.options_with_values }}">
              <legend>{{ option.values }}</legend>
              {% for value in option.values %}
                <div id="radio-container-{{ value }}" class="radio-container">
                  <input
                    {% if option.selected_value == value %}checked{% endif %}
                    class="product_select_input"
                    type="radio"
                    name="{{ option.name }}"
                    value="{{ value }}"
                    id="{{ option.name | handleize }}-{{ value | handleize }}"
                  >
                  <label class="product_select_label" for="{{ option.name | handleize }}-{{ value | handleize }}">
                    {{ value }}
                  </label>
                </div>
              {% endfor %}
            </fieldset> 
            
          {% endfor %}
        </div>
      {% endif %}
      <input type="text" name="quantity" min="1" value="1" id="quantity">

      <input type="submit" value="Add to cart">
    {% endform %}
  </div>
</div>

<script>
  const product = {{ product | json }}

console.log(product)

const setVariantUnavailable = () => {
  document.querySelectorAll('.radio-container').forEach(el=>{
  el.classList.remove('disabled')})

  const selectedRadio = document.querySelectorAll(
    '.product-option input[type="radio"]:checked'
  );

  console.log(selectedRadio);

  const unavailableVariants = [];

  product.variants.forEach((el) => {
    if (el.option1 === selectedRadio[0].value && el.available === false) {
      unavailableVariants.push(el);
    }
  });


  console.log(unavailableVariants);

  unavailableVariants.forEach((el) => {
    console.log(el.option2)
    console.log(document.querySelector(`#radio-container-${el.option2}`))
    document.getElementById(`radio-container-${el.option2}`).classList.add('disabled');
  });

  {% comment %} console.log(selectedVariants); {% endcomment %}
  
};

setVariantUnavailable()

  document.querySelectorAll('.product-option input[type="radio"]')
  .forEach(radio => radio.addEventListener('change', ()=>{
    // find selected options  
    const selectedOptions = []
  
      document.querySelectorAll('.product-option input[type="radio"]:checked')
      .forEach(radio => selectedOptions.push(radio.value))
  
      // find matched variant
      const matchedVariant = product.variants.find(variant => {
          let pass = true
  
          for (let i = 0; i < selectedOptions.length; i++) {
              if(selectedOptions.indexOf(variant.options[i]) === -1) {
                  pass = false
                  break
              }
          }
          return pass
      })

      // Change product form variant id
      document.querySelector('#product-id').value = matchedVariant.id
      console.log(matchedVariant)

      // change url
      const url = new URLParse(window.location.href, true)
      console.log(url)
      url.query.variant = matchedVariant.id
      const newUrl = url.toString()
      console.log(newUrl)
      window.history.replaceState(null,null,newUrl)

      // change prices
      document.querySelector(".product-card__price").textContent = matchedVariant.price
      {% comment %} document.querySelector(".product-card__price--compare").textContent = matchedVariant.compare_at_price {% endcomment %}

      setVariantUnavailable()

      
  }))

  console.log(product)
</script>

{% schema %}
    {
        "name": "product",
        "class": "product__grid"
        
    }
    
{% endschema %}